% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seMIsupcox.R
\name{seMIsupcox}
\alias{seMIsupcox}
\title{Semisupervsised learning for a right censored endpoint}
\usage{
seMIsupcox(
  Impute = FALSE,
  Impute.m = 5,
  center.init = TRUE,
  center.init.N = 500,
  center.init.Ks = 2:7,
  X,
  CVE.fun = "LP",
  Y,
  nfolds,
  save.path = NULL,
  Unsup.Sup.relImp = list(relImp.55 = c(0.5, 0.5)),
  plot.cons = F,
  return.detail = F
)
}
\arguments{
\item{Impute}{boolean. Default is FALSE to indicate that the user performed
the imputation and provides the imputed data. If TRUE, the imputation will
be performed within the call using the MImpute.surv() function. Note that
if Impute is TRUE, center.init is also forced to TRUE as the center
coordinates may depend on the imputation.}

\item{Impute.m}{Used only if Impute is TRUE ; number of imputations to
perform}

\item{center.init}{Either a User supplied List of dataframe containing the
cluster centers coordinates (for exemple as obtained with
Initiate.centers(), OR TRUE to initiate the centers within the call of the
function (performed with Initiate.centers()). Note that if TRUE a random
initialisation will be performed. For a finner tunning of the center
initialization the user should generate and provide the list of centers
coordinates.}

\item{center.init.N}{Used only if center.init is TRUE. The number to
initialisation to produce. Default to 500.}

\item{center.init.Ks}{Used only if center.init is TRUE. Vector of number of
clusters to generate for the initialisation. Default to 2 to 7 clusters.}

\item{X}{Data, in the form of a list of data.frame(s). The list should be one
length 1 if data are complete or if Impute is TRUE, of should be a list of
imputed dataframes if data are incomplete. If columns named "\code{time}" and
"\code{status}" are present they will be discared for the clustering.}

\item{CVE.fun}{string indicating how to calculate the cross validation error
: \code{LP} for linear predictior, \code{VandVH for Verweij} and Van Houwelingen estmator
and \code{basic} for the basic approach.}

\item{Y}{Passed to CVE.fun, Outcome data: should be dataframe or matrix with
2 columns: "time" and "status".}

\item{nfolds}{Number of folds for cross-validation.}

\item{save.path}{Path indicating where objectives values for each iteration
should be saved. If null the values are not saved.}

\item{Unsup.Sup.relImp}{List of wieghts for the unsupervised and supervised
objectives for the pareto optimal solution. Default is to use only one set
of weigths : same weight.}

\item{plot.cons}{Logical. Should the consensus tree be plotted?}

\item{return.detail}{logical. Should the detail of imputation specific
partition be returned, in the supplument to the final consensus partition?}
}
\value{
A vector containing the final cluster IDs
}
\description{
MultiCons consensus based method for MI-SemiSup clustering
Clustering. The final partition is a consensus of the Pareto-optimal
solutions.
}
\examples{
#seMIsupcox()
}
