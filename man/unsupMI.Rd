% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unsupMI.R
\name{unsupMI}
\alias{unsupMI}
\title{Unsupervised learning for incomplete dataset}
\usage{
unsupMI(data, log.data = FALSE, algo = "km", k.crit = "ch",
   comb.cons = FALSE, plot.cons = FALSE, return.detail = FALSE,
   not.to.use = c("time", "status"))
}
\arguments{
\item{data}{list of the imputed datasets (if present, columns names
\code{time} and \code{status} will be discard)}

\item{log.data}{logical. Should all columns of the dataset be logged before
applying clustering algorithms?}

\item{algo}{vector of strings: name of clustering algorithms to use (use
"\code{km}" for \code{k-means}, "\code{kmed}" for \code{K-medians},
"\code{hc}" for \code{hclust} and/or "\code{mclust}" for \code{mclust}).}

\item{k.crit}{string. Criterion to select the optimal number of clusters (for
each imputed dataset). Use "\code{ch}" for Calinski and Harabasz criterion
(not available for \code{mclust}), "\code{CritCF}" for \code{CriCF} or
"\code{bic}" for \code{BIC} (\code{mclust} only).}

\item{comb.cons}{logical. Forced to \code{FALSE} if \code{length(algo)<2}.
Use \code{TRUE} to perform an additional consensus from all partitions
generates, whatever the algorithm.}

\item{plot.cons}{logical. Use \code{TRUE} to print the MultiCons tree.}

\item{return.detail}{logical. Should the detail of imputation specific
partition be returned, in the supplement to the final consensus partition?}

\item{not.to.use}{vector of strings : names of the columns that should be
discarded for the learning step.}
}
\value{
if \code{length(algo)>1} a vector of final cluster ID ; if
\code{length(algo)>1} a data.frame with each column being the final cluster
ID for the corresponding algorithm.
}
\description{
Unsupervised clustering for multiply imputed datasets using \code{MultiCons}
consensus (Faucheux et al. 2021 procedure)
}
\examples{
## With imputation included TO DO
#
### With imputation not included
## 1 imputation
data(cancer, package = "survival")
cancer$status <- cancer$status - 1
cancer.imp <- MImpute_surv(cancer, 3)
## 2 learning
res <- unsupMI(data = cancer.imp)
## 2.bis learning with several algorithms
res.2 <- unsupMI(data = cancer.imp, algo = c("km", "hc"), comb.cons = TRUE,
                 plot.cons = TRUE)
}
